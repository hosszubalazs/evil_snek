# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Build'
  pool:
    vmImage: 'windows-2019'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x86'

  - script: python -m pip install --upgrade pip && pip install -r requirements/requirements.txt
    displayName: 'Install dependencies'




- job: 'Test'
  # Sharing Pipeline artifacts might be needed later on: https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts?view=azure-devops&tabs=yaml
  dependsOn: Build
  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  # prefer simple scripts instead of specific tasks if it does work
  - script: mkdir junit
  - script: docker build -t hosszubalazs/evil_snek .
  - script: docker run -v $(Build.SourcesDirectory)/junit:/home/work/junit hosszubalazs/evil_snek

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Docker based testing'
    condition: succeededOrFailed()

  - task: Docker@1
    displayName: Tag image
    inputs:
      command: tag
      containerregistrytype: 'Container Registry'    
      dockerRegistryEndpoint: 'hosszubalazs_dockerhub'
      imageName: hosszubalazs/evil_snek
      arguments: hosszubalazs/evil_snek:$(Build.BuildId)

  - task: Docker@1
    displayName: Push image
    inputs:
      command: push
      containerregistrytype: 'Container Registry'    
      dockerRegistryEndpoint: 'hosszubalazs_dockerhub'
      imageName: hosszubalazs/evil_snek:$(Build.BuildId)
  
 # - task: Docker@1
 #   displayName: login
 #   inputs:
 #     containerregistrytype: 'Container Registry'
 #     dockerRegistryEndpoint: 'hosszubalazs_dockerhub'
 #     command: login

# - task: Docker@0
#  displayName: 'Build an image'
#  inputs:
#    containerregistrytype: 'Container Registry'
#    dockerRegistryConnection: 'hosszubalazs_dockerhub'

#  - task: Docker@0
#  displayName: 'Run an image'
#  inputs:
##    containerregistrytype: 'Container Registry'
#    dockerRegistryConnection: 'hosszubalazs_dockerhub'
 #   action: 'Run an image'


# The distribution strategy is not clear
#- job: 'Publish'
#  dependsOn: 'Test'
#  pool:
#    vmImage: 'vs2017-win2016'

  #steps:
#  - task: UsePythonVersion@0
#    inputs:
#     versionSpec: '3.7'
#     architecture: 'x86'

#  - script: python setup.py sdist --format=zip
#    displayName: 'Build sdist'
